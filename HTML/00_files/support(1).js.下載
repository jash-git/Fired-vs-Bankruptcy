function setCookie2(name, value) {
    var days = 30;
    var expire = new Date();
    expire.setTime(expire.getTime() + days * 24 * 60 * 60 * 1000);
    document.cookie = name + "=" + value + ";expires=" + expire.toUTCString();
}

function getCookie2(name) {
    var arr, reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
    if (arr = document.cookie.match(reg)) return arr[2]; else return "";
}

function removeCookie2(name) {
    document.cookie = name + "=;expires=" + new Date(0).toUTCString();
}
var $$site = {
    cookie: {
        add: function (n, v, e, cb) {
            $.ajax({
                type: "Post",
                url: "/user/addcookie",
                data: { "n": n, "v": v, "e": e },
                dataType: "json",
                success: function (e) {
                    if (cb) { cb(); }
                },
                error: function (e) {
                    if (cb) { cb(); }
                }
            });
        },
        del: function (n, cb) {
            $.ajax({
                type: "Post",
                url: "/user/delcookie",
                data: { "n": n },
                dataType: "json",
                success: function (e) {
                    if (cb) { cb(); }
                },
                error: function (e) {
                    if (cb) { cb(); }
                }
            });
        }
    }
};

var fontsize = function (s) {
    if (isNaN(parseInt(po.fs))) {
        po.fs = 18;
    }
    if (s > 0) {
        po.fs = parseInt(po.fs) + 4;
    } else {
        po.fs = parseInt(po.fs) - 4;
    }
    if (po.fs > 50) po.fs = 50;
    $('.novelcontent').css('font-size', po.fs + 'px');
    setCookie2("viewset2", JSON.stringify(po));
};
var bodybg = function (s) {
    if (s > 0) {
        po.bc = true;
        $('body').addClass('black');
    }
    else {
        po.bc = false;
        $('body').removeClass('black');
    }
    setCookie2("viewset2", JSON.stringify(po));
};
function clearHistory() {
    removeCookie2("searchHistory");
}

function subScribe(bookid) {
    var state = $(".subscribe").text();
    if (state == "訂閱" || state == "Subscribe" || state == "購読") {
        $.ajax({
            url: "/user/setsubscribe?bookid=" + bookid, success: function () {
                if (state == "訂閱") {
                    $(".subscribe").text("已訂閲");
                    $(".subscribe").addClass("rssed");
                } else if (state == "Subscribe") {
                    $(".subscribe").text("Subscribed");
                    $(".subscribe").addClass("rssed");
                } else if (state == "購読") {
                    $(".subscribe").text("購読済み");
                    $(".subscribe").addClass("rssed");
                }
            }
        })
    }
}

function shareForm() {
    var layerIdx = layer.open({
        type: 0,
        btn: ["Close"],
        anim: "up",
        title: false,
        shadeClose: true,
        success: function () { $("#shareLink").val($("#hfsharelink").val()); },
        shade: true,
        content: $("#sharetemplate").html()
    });
}

function chapterMenu(bookid, pi, tuid) {
    $.get("/home/chapterlist", { "bookid": bookid, "pi": pi, "tuid": tuid }, function (res) {
        layer.open({
            btn: ["Close"],
            type: 0,
            anim: "up",
            skin: "laypopchap",
            shadeClose: true,
            success: function () { },
            shade: true,
            content: res,
            title: false,
        });
    }, "html");
}


function delSubscribe(bookid) {
    layer.open({
        btn: ['確認', '取消'],
        btn1: function () {
            $.post("/user/delsubscribe", { "bookid": bookid }, function (res) {
                window.location.reload();
            })
        },
        type: 0,
        anim: "up",
        skin: "laypopchap",
        shadeClose: true,
        success: function () { },
        content: "確認取消訂閱？",
    })

}
function delHistory(bookid) {
    layer.open({
        btn: ['確認', '取消'],
        btn1: function () {
            $.post("/user/delhistory", { "bookid": bookid }, function (res) {
                window.location.reload();
            })
        },
        type: 0,
        anim: "up",
        skin: "laypopchap",
        shadeClose: true,
        success: function () { },
        content: "確認刪除？",
    })
}
function copyShareLink(id) {
    copyToClipboard($(id).val());
}

function copyToClipboard(text) {
    $('#share').removeClass('show')
    if (text.indexOf('-') !== -1) {
        let arr = text.split('-');
        text = arr[0] + arr[1];

    }
    var textArea = document.createElement("textarea");
    textArea.style.position = 'fixed';
    textArea.style.top = '0';
    textArea.style.left = '0';
    textArea.style.width = '2em';
    textArea.style.height = '2em';
    textArea.style.padding = '0';
    textArea.style.border = 'none';
    textArea.style.outline = 'none';
    textArea.style.boxShadow = 'none';
    textArea.style.background = 'transparent';
    textArea.value = text;
    document.body.appendChild(textArea);
    textArea.select();

    try {
        var successful = document.execCommand('copy');
        if (successful) {
            msg("Copied");
        }
        else {
            msg('This browser does not support copy to the clipboard');
        }
    } catch (err) {
        msg('This browser does not support copy to the clipboard');
    }
    document.body.removeChild(textArea);
}
function msg(m, t) {
    layer.open({
        btn: ['Close'],
        type: 0,
        anim: "scale",
        shadeClose: true,
        shade: true,
        content: m,
        time: 800
    });
}
function share() {
    if ($("#userid").val() > 0) {
        $('#feedback').addClass('show')
    } else {
        $("#loginpop").addClass("show");
    }
}